The ``add_integer`` module
======================

Using ``add``
-------------------

Write a function that adds 2 integers.

    Prototype: def add_integer(a, b=98):
    a and b must be integers or floats, otherwise raise a TypeError exception with the message a must be an integer or b must be an integer
    a and b must be first casted to integers if they are float
    Returns an integer: the addition of a and b
    You are not allowed to import any module

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3
>>> add_integer(4, True)
5
>>> add_integer(3, 5.2)
8
>>> add_integer(3.1, 2)
5
>>> add_integer(-4, 2)
-2
>>> add_integer(3, -7)
-4
>>> add_integer(int, 4)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(6, "a")
Traceback (most recent call last):
    ...
TypeError: b must be an integer
>>> add_integer((5, 1), (6, 2))
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> print(add_integer) # doctest: +ELLIPSIS
<function add_integer at 0x...>
>>> add_integer(4)
102
>>> add_integer(False)
98
>>> add_integer(2 + 4j)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
