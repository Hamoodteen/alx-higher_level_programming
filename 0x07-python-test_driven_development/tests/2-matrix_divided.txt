The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Write a function that divides all elements of a matrix.

    Prototype: def matrix_divided(matrix, div):
    matrix must be a list of lists of integers or floats, 
    otherwise raise a TypeError exception with the message matrix must be a matrix (list of lists) 
    of integers/floats

    Each row of the matrix must be of the same size, otherwise raise a TypeError exception 
    with the message Each row of the matrix must have the same size

    div must be a number (integer or float), otherwise raise a TypeError exception 
    with the message div must be a number

    div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError exception 
    with the message division by zero

    All elements of the matrix should be divided by div, rounded to 2 decimal places
    Returns a new matrix
    You are not allowed to import any module

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix1 = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix1, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix1
[[1, 2, 3], [4, 5, 6]]
>>> matrix2 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix2, 5)
[[0.2, 0.4, 0.6], [0.8, 1.0, 1.2], [1.4, 1.6, 1.8]]
>>> matrix3 = [[1, 2, 3], [4, 5], [6, 7, 8]]
>>> matrix_divided(matrix3, 8)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix4 = [[1.2, 4.1, 7.7], [8.2, 1.1, 3.6]]
>>> matrix_divided(matrix4, 5.3)
[[0.23, 0.77, 1.45], [1.55, 0.21, 0.68]]
>>> matrix5 = [[1], [2], [3], [4], [1, 2, 3, 4]]
>>> matrix_divided(matrix5, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix6 = [[1, 2], [3, 4]]
>>> matrix_divided(matrix6, "hi")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix7 = [[1, 2], [3, 4], [5, 6], [7, "abc"]]
>>> matrix_divided(matrix7, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix8 = [[1], [2], [3]]
>>> matrix_divided(matrix8, 1)
[[1.0], [2.0], [3.0]]
>>> matrix8
[[1], [2], [3]]
>>> matrix9 = [[1], [2]]
>>> matrix_divided(matrix9, True)
[[1.0], [2.0]]
>>> matrix10 = "abc"
>>> matrix_divided(matrix10, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix11 = [[1, 2, 4, 6], [2, 9, 9, 2]]
>>> matrix_divided(matrix11, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix12 = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix12, (0, 2, 4))
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix13 = [[1, 2], [4, 2, 7], ["aaa"]]
>>> matrix_divided(matrix13, '\n')
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix14 = [[1, 2], [4, 2, 7], ["aaa"]]
>>> matrix_divided(matrix14, 9)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix15 = [[1, 2, 1], [4, 2, 7], ["aaa", "bbb", "ccc"]]
>>> matrix_divided(matrix15, False)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix16 = [[1, 2, 1], [4, 2, 7], ["aaa", int(), (0, 2, 1)]]
>>> matrix_divided(matrix16, 16)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix17 = [[1, 2, 1], [4, 2, 7], [(0, 2, 1)]]
>>> matrix_divided(matrix17, 99)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix18 = [[1, 2, 3 + 4j], [5, 6, 7 + 8j]]
>>> matrix_divided(matrix18, 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
