The ``lazy_matrix_mul`` module
======================

Using ``lazy_matrix_mul``
-------------------

Write a function that prints My name is <first name> <last name>

    Prototype: def lazy_matrix_mul
    first_name and last_name must be strings otherwise, raise a TypeError exception with the message first_name must be a string or last_name must be a string
    You are not allowed to import any module

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[ 7 10]
 [15 22]]
>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13 16]]
>>> lazy_matrix_mul([[1, 2]], [[True, 4], [5, False]])
[[11  4]]
>>> lazy_matrix_mul([[1, 2]], [["a", 4], [5, 6]])
Traceback (most recent call last):
    ...
ValueError: data type must provide an itemsize
>>> lazy_matrix_mul([[1, 2]], [[int('a'), 4], [5, 6]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: invalid literal for int() with base 10: ...
>>> lazy_matrix_mul([[1, -2]], [[4.1, 4], [5, 6.7]])
[[-5.9 -9.4]]
>>> lazy_matrix_mul([[1, -2]], [[4.1, 4], [5, float("6.7")]])
[[-5.9 -9.4]]
>>> lazy_matrix_mul([[1, -2]], [[int(4.1), 4], [5, float("6.7")]])
[[-6.  -9.4]]
>>> lazy_matrix_mul([[1, 2], [3 + 1j, 4 - 1j]], [[3 + 2j, 4], [5, 6 - 6j]])
[[13. +2.j 16.-12.j]
 [27. +4.j 30.-26.j]]
>>> lazy_matrix_mul(((1, 2), (3, 4)), ((5, 6), (7, 8)))
[[19 22]
 [43 50]]
>>> lazy_matrix_mul([[1, 2]], [[3, (4, 7)], [5, 6]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape ...
>>> lazy_matrix_mul([[1, 2, 3]], [[3, 4], [5, 6]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: shapes ...
>>> lazy_matrix_mul([[1, 2]], [[3, 4, 5, 1], [6, 7, 8]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape ...
>>> lazy_matrix_mul([[1, 2]], [[3, (4, 5)], [6, 7, 8]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape ...
>>> lazy_matrix_mul([[1, 2, 9]], [[3, 4, 5], [6, 7, 8]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: shapes ..
>>> lazy_matrix_mul([[1]], [[3, 4, 5], [6, 7, 8]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: shapes ..
>>> lazy_matrix_mul([[2]], [[3, 4, 5]])
[[ 6  8 10]]
>>> lazy_matrix_mul([[2], [4], [6]], [[3, 4, 5]])
[[ 6  8 10]
 [12 16 20]
 [18 24 30]]
>>> lazy_matrix_mul([[2], [4], [6]], [[3, 4, 5, 6, 7]])
[[ 6  8 10 12 14]
 [12 16 20 24 28]
 [18 24 30 36 42]]
>>> lazy_matrix_mul([[2, 1], [4, 1], [6, 1]], [[3, 4, 5, 6, 7]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: shapes ..
>>> lazy_matrix_mul([[2, 1], [4, 1], [6, 1]], [[3, 4, 5]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: shapes ..
>>> lazy_matrix_mul([[2, 1], [4, 1], [6, 1]], [[3, 4]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: shapes ..
>>> lazy_matrix_mul([[2, 1], [4, 1], [6, 1]], [[3, 4, 5, 6, 7], [5, 5, 5, 5, 5]])
[[11 13 15 17 19]
 [17 21 25 29 33]
 [23 29 35 41 47]]
>>> lazy_matrix_mul([[2, 1], [4, 1], [6, 1]], [[3, 4, 5, 6, 7], [5]]) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape ...
>>> lazy_matrix_mul([[2, 1, 1]], [[3, 4, 5, 6, 7], [5, 5, 5, 5, 5], [1, 1, 1, 1, 1]])
[[12 14 16 18 20]]
